{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":3,"numPassedTests":16,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":16,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1761028749942,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Group input data into intervals"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Group input data into intervals should return ascending intervals (as JSON)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750080,"status":"passed","title":"should return ascending intervals (as JSON)"},{"ancestorTitles":["Group input data into intervals"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Group input data into intervals should return ascending intervals without empty slots for sparse array (as JSON)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750081,"status":"passed","title":"should return ascending intervals without empty slots for sparse array (as JSON)"},{"ancestorTitles":["Group input data into intervals"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Group input data into intervals should return descending intervals (as JSON)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750082,"status":"passed","title":"should return descending intervals (as JSON)"},{"ancestorTitles":["Group input data into intervals with colors"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Group input data into intervals with colors should return correct intervals with colors (as JSON)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750082,"status":"passed","title":"should return correct intervals with colors (as JSON)"},{"ancestorTitles":["Group input data into intervals with colors"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Group input data into intervals with colors should return correct intervals with colors for sparse array with uneven number of intervals (as JSON)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750082,"status":"passed","title":"should return correct intervals with colors for sparse array with uneven number of intervals (as JSON)"},{"ancestorTitles":["Group input data into intervals with colors"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Group input data into intervals with colors should return correct descending intervals with colors (as JSON)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750082,"status":"passed","title":"should return correct descending intervals with colors (as JSON)"},{"ancestorTitles":["Group input data into intervals with colors"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Group input data into intervals with colors should use correct color scheme for intervals (as JSON)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750082,"status":"passed","title":"should use correct color scheme for intervals (as JSON)"},{"ancestorTitles":["Group input data into intervals with colors"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Group input data into intervals with colors should return error message for incorrect color scheme id (as JSON)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750082,"status":"passed","title":"should return error message for incorrect color scheme id (as JSON)"},{"ancestorTitles":["Group input data into intervals with colors"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Group input data into intervals with colors should return error message if color scheme id is missing (as JSON)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750083,"status":"passed","title":"should return error message if color scheme id is missing (as JSON)"},{"ancestorTitles":["Group input data into intervals with colors"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Group input data into intervals with colors should return correct metadata (as JSON)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750083,"status":"passed","title":"should return correct metadata (as JSON)"}],"endTime":1761028750083,"message":"","name":"/Users/aurelia/Studier/1DV610_CleanCode/group-into-intervals/test/createIntervals.test.js","startTime":1761028749966,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Validate input array"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Validate input array should be array","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750103,"status":"passed","title":"should be array"},{"ancestorTitles":["Validate input array"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Validate input array should not be mixed array","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750107,"status":"passed","title":"should not be mixed array"},{"ancestorTitles":["Validate input array"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Validate input array should be array of numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750108,"status":"passed","title":"should be array of numbers"}],"endTime":1761028750108,"message":"","name":"/Users/aurelia/Studier/1DV610_CleanCode/group-into-intervals/test/validateInput.test.js","startTime":1761028750086,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Display color schemes"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Display color schemes should return all color schemes (as JSON)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750127,"status":"passed","title":"should return all color schemes (as JSON)"},{"ancestorTitles":["Display color schemes"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Display color schemes should contain at least one color scheme object (as JSON)","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761028750128,"status":"passed","title":"should contain at least one color scheme object (as JSON)"},{"ancestorTitles":["Display color schemes"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Display color schemes should return selected color scheme (as JSON)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761028750128,"status":"passed","title":"should return selected color scheme (as JSON)"}],"endTime":1761028750129,"message":"","name":"/Users/aurelia/Studier/1DV610_CleanCode/group-into-intervals/test/colorSchemes.test.js","startTime":1761028750110,"status":"passed","summary":""}],"wasInterrupted":false}
